name: Build Flutter Debug APK

on:
  push:
    branches:
      - develop # Trigger für develop branch beibehalten
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    # environment: develop # Umgebung wird für Debug meist nicht benötigt, kann aber bleiben

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Neueste Version verwenden

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          # Verwende ggf. denselben Channel/Version wie im Release-Workflow für Konsistenz
          channel: 'stable'
          # flutter-version: '3.27.4'

      # Schritt für 'pub get' direkt im Root ausführen
      - name: Get Flutter dependencies
        run: flutter pub get
        # Kein 'cd' oder 'working-directory' nötig

      # Schritt für 'doctor' direkt im Root ausführen
      - name: Check Flutter Doctor
        run: flutter doctor -v
        # Kein 'working-directory' nötig

      # Schritt für 'Build APK' direkt im Root ausführen
      - name: Build Debug APK
        run: flutter build apk --debug
        # Kein 'working-directory' nötig

      # Upload Schritt mit korrektem Pfad
      - name: Upload Debug APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DLRG-Community-Manager-Debug.apk # Name angepasst für Klarheit
          # Pfad ohne das Unterverzeichnis-Präfix
          path: build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: error # Gut, um sicherzustellen, dass die APK gebaut wurde
